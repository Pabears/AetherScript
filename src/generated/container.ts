// Generated by AutoGen at 2025-07-08T10:41:36.768Z
import { UserServiceImpl } from './userservice.service.impl';

// A simple map of interface names to implementation classes
interface ServiceMap {
    'UserService': UserServiceImpl;
}

class Container {
    private instances: Map<keyof ServiceMap, any> = new Map();

    public get<K extends keyof ServiceMap>(identifier: K): ServiceMap[K] {
        if (!this.instances.has(identifier)) {
            const instance = this.createInstance(identifier);
            this.instances.set(identifier, instance);
        }
        return this.instances.get(identifier)!;
    }

    private createInstance<K extends keyof ServiceMap>(identifier: K): ServiceMap[K] {
        switch (identifier) {
        case 'UserService':
            return new UserServiceImpl();
        default:
            throw new Error('Service not found for identifier: ' + identifier);
        }
    }
}

export const container = new Container();
